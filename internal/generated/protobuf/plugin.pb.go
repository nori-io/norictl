// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.6.1
// source: plugin.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// cmd: plugin get
type PluginGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagVerbose bool `protobuf:"varint,2,opt,name=flagVerbose,proto3" json:"flagVerbose,omitempty"`
}

func (x *PluginGetRequest) Reset() {
	*x = PluginGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginGetRequest) ProtoMessage() {}

func (x *PluginGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginGetRequest.ProtoReflect.Descriptor instead.
func (*PluginGetRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *PluginGetRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginGetRequest) GetFlagVerbose() bool {
	if x != nil {
		return x.FlagVerbose
	}
	return false
}

type PluginPullRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagDeps bool `protobuf:"varint,2,opt,name=flagDeps,proto3" json:"flagDeps,omitempty"`
}

func (x *PluginPullRequest) Reset() {
	*x = PluginPullRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginPullRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginPullRequest) ProtoMessage() {}

func (x *PluginPullRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginPullRequest.ProtoReflect.Descriptor instead.
func (*PluginPullRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *PluginPullRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginPullRequest) GetFlagDeps() bool {
	if x != nil {
		return x.FlagDeps
	}
	return false
}

// cmd: plugin install
type PluginInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagVerbose bool `protobuf:"varint,2,opt,name=flagVerbose,proto3" json:"flagVerbose,omitempty"`
	FlagDeps    bool `protobuf:"varint,3,opt,name=flagDeps,proto3" json:"flagDeps,omitempty"`
	FlagAll     bool `protobuf:"varint,4,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
}

func (x *PluginInstallRequest) Reset() {
	*x = PluginInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInstallRequest) ProtoMessage() {}

func (x *PluginInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInstallRequest.ProtoReflect.Descriptor instead.
func (*PluginInstallRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *PluginInstallRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginInstallRequest) GetFlagVerbose() bool {
	if x != nil {
		return x.FlagVerbose
	}
	return false
}

func (x *PluginInstallRequest) GetFlagDeps() bool {
	if x != nil {
		return x.FlagDeps
	}
	return false
}

func (x *PluginInstallRequest) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

type PluginInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InterfaceName string `protobuf:"bytes,1,opt,name=interfaceName,proto3" json:"interfaceName,omitempty"`
}

func (x *PluginInterfaceRequest) Reset() {
	*x = PluginInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInterfaceRequest) ProtoMessage() {}

func (x *PluginInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInterfaceRequest.ProtoReflect.Descriptor instead.
func (*PluginInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *PluginInterfaceRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

// cmd: plugin list
type PluginListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlagAll         bool `protobuf:"varint,1,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
	FlagError       bool `protobuf:"varint,2,opt,name=flagError,proto3" json:"flagError,omitempty"`
	FlagInstalled   bool `protobuf:"varint,3,opt,name=flagInstalled,proto3" json:"flagInstalled,omitempty"`
	FlagRunning     bool `protobuf:"varint,4,opt,name=flagRunning,proto3" json:"flagRunning,omitempty"`
	FlagInstallable bool `protobuf:"varint,5,opt,name=flagInstallable,proto3" json:"flagInstallable,omitempty"`
	FlagInactive    bool `protobuf:"varint,6,opt,name=flagInactive,proto3" json:"flagInactive,omitempty"`
}

func (x *PluginListRequest) Reset() {
	*x = PluginListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginListRequest) ProtoMessage() {}

func (x *PluginListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginListRequest.ProtoReflect.Descriptor instead.
func (*PluginListRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *PluginListRequest) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

func (x *PluginListRequest) GetFlagError() bool {
	if x != nil {
		return x.FlagError
	}
	return false
}

func (x *PluginListRequest) GetFlagInstalled() bool {
	if x != nil {
		return x.FlagInstalled
	}
	return false
}

func (x *PluginListRequest) GetFlagRunning() bool {
	if x != nil {
		return x.FlagRunning
	}
	return false
}

func (x *PluginListRequest) GetFlagInstallable() bool {
	if x != nil {
		return x.FlagInstallable
	}
	return false
}

func (x *PluginListRequest) GetFlagInactive() bool {
	if x != nil {
		return x.FlagInactive
	}
	return false
}

type PluginListWithStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *ID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Author          *Author       `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Dependencies    []*Dependency `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Description     *Description  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Core            *Core         `protobuf:"bytes,5,opt,name=core,proto3" json:"core,omitempty"`
	Interface       string        `protobuf:"bytes,6,opt,name=interface,proto3" json:"interface,omitempty"`
	License         *License      `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
	Links           []*Link       `protobuf:"bytes,8,rep,name=links,proto3" json:"links,omitempty"`
	Repository      *Repository   `protobuf:"bytes,9,opt,name=repository,proto3" json:"repository,omitempty"`
	Tags            []string      `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	FlagAll         bool          `protobuf:"varint,11,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
	FlagError       bool          `protobuf:"varint,12,opt,name=flagError,proto3" json:"flagError,omitempty"`
	FlagInstalled   bool          `protobuf:"varint,13,opt,name=flagInstalled,proto3" json:"flagInstalled,omitempty"`
	FlagRunning     bool          `protobuf:"varint,14,opt,name=flagRunning,proto3" json:"flagRunning,omitempty"`
	FlagInstallable bool          `protobuf:"varint,15,opt,name=flagInstallable,proto3" json:"flagInstallable,omitempty"`
	FlagInactive    bool          `protobuf:"varint,16,opt,name=flagInactive,proto3" json:"flagInactive,omitempty"`
}

func (x *PluginListWithStatus) Reset() {
	*x = PluginListWithStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginListWithStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginListWithStatus) ProtoMessage() {}

func (x *PluginListWithStatus) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginListWithStatus.ProtoReflect.Descriptor instead.
func (*PluginListWithStatus) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *PluginListWithStatus) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginListWithStatus) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PluginListWithStatus) GetDependencies() []*Dependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *PluginListWithStatus) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *PluginListWithStatus) GetCore() *Core {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *PluginListWithStatus) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *PluginListWithStatus) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *PluginListWithStatus) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *PluginListWithStatus) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PluginListWithStatus) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *PluginListWithStatus) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

func (x *PluginListWithStatus) GetFlagError() bool {
	if x != nil {
		return x.FlagError
	}
	return false
}

func (x *PluginListWithStatus) GetFlagInstalled() bool {
	if x != nil {
		return x.FlagInstalled
	}
	return false
}

func (x *PluginListWithStatus) GetFlagRunning() bool {
	if x != nil {
		return x.FlagRunning
	}
	return false
}

func (x *PluginListWithStatus) GetFlagInstallable() bool {
	if x != nil {
		return x.FlagInstallable
	}
	return false
}

func (x *PluginListWithStatus) GetFlagInactive() bool {
	if x != nil {
		return x.FlagInactive
	}
	return false
}

type PluginListWithoutStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *ID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Author       *Author       `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Dependencies []*Dependency `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Description  *Description  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Core         *Core         `protobuf:"bytes,5,opt,name=core,proto3" json:"core,omitempty"`
	Interface    string        `protobuf:"bytes,6,opt,name=interface,proto3" json:"interface,omitempty"`
	License      *License      `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
	Links        []*Link       `protobuf:"bytes,8,rep,name=links,proto3" json:"links,omitempty"`
	Repository   *Repository   `protobuf:"bytes,9,opt,name=repository,proto3" json:"repository,omitempty"`
	Tags         []string      `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *PluginListWithoutStatus) Reset() {
	*x = PluginListWithoutStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginListWithoutStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginListWithoutStatus) ProtoMessage() {}

func (x *PluginListWithoutStatus) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginListWithoutStatus.ProtoReflect.Descriptor instead.
func (*PluginListWithoutStatus) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *PluginListWithoutStatus) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginListWithoutStatus) GetAuthor() *Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *PluginListWithoutStatus) GetDependencies() []*Dependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *PluginListWithoutStatus) GetDescription() *Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *PluginListWithoutStatus) GetCore() *Core {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *PluginListWithoutStatus) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *PluginListWithoutStatus) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *PluginListWithoutStatus) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *PluginListWithoutStatus) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PluginListWithoutStatus) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PluginListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        []*PluginListWithStatus `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	ErrorPlugin *ErrorReply             `protobuf:"bytes,2,opt,name=errorPlugin,proto3" json:"errorPlugin,omitempty"`
}

func (x *PluginListReply) Reset() {
	*x = PluginListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginListReply) ProtoMessage() {}

func (x *PluginListReply) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginListReply.ProtoReflect.Descriptor instead.
func (*PluginListReply) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *PluginListReply) GetData() []*PluginListWithStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PluginListReply) GetErrorPlugin() *ErrorReply {
	if x != nil {
		return x.ErrorPlugin
	}
	return nil
}

// cmd: plugin remove
type PluginRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PluginRemoveRequest) Reset() {
	*x = PluginRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginRemoveRequest) ProtoMessage() {}

func (x *PluginRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginRemoveRequest.ProtoReflect.Descriptor instead.
func (*PluginRemoveRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *PluginRemoveRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

type PluginStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagAll bool `protobuf:"varint,2,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
}

func (x *PluginStartRequest) Reset() {
	*x = PluginStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStartRequest) ProtoMessage() {}

func (x *PluginStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStartRequest.ProtoReflect.Descriptor instead.
func (*PluginStartRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{9}
}

func (x *PluginStartRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginStartRequest) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

type PluginStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagAll bool `protobuf:"varint,2,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
}

func (x *PluginStopRequest) Reset() {
	*x = PluginStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginStopRequest) ProtoMessage() {}

func (x *PluginStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginStopRequest.ProtoReflect.Descriptor instead.
func (*PluginStopRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{10}
}

func (x *PluginStopRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginStopRequest) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

// cmd: plugin uninstall
type PluginUninstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            *ID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagAll       bool `protobuf:"varint,2,opt,name=flagAll,proto3" json:"flagAll,omitempty"`
	FlagDependent bool `protobuf:"varint,3,opt,name=flagDependent,proto3" json:"flagDependent,omitempty"`
}

func (x *PluginUninstallRequest) Reset() {
	*x = PluginUninstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginUninstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginUninstallRequest) ProtoMessage() {}

func (x *PluginUninstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginUninstallRequest.ProtoReflect.Descriptor instead.
func (*PluginUninstallRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{11}
}

func (x *PluginUninstallRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginUninstallRequest) GetFlagAll() bool {
	if x != nil {
		return x.FlagAll
	}
	return false
}

func (x *PluginUninstallRequest) GetFlagDependent() bool {
	if x != nil {
		return x.FlagDependent
	}
	return false
}

// cmd: plugin upload
type PluginUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filepath string `protobuf:"bytes,1,opt,name=filepath,proto3" json:"filepath,omitempty"`
}

func (x *PluginUploadRequest) Reset() {
	*x = PluginUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginUploadRequest) ProtoMessage() {}

func (x *PluginUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginUploadRequest.ProtoReflect.Descriptor instead.
func (*PluginUploadRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{12}
}

func (x *PluginUploadRequest) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

// cmd: plugin meta
type PluginMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *PluginID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FlagDeps            bool      `protobuf:"varint,2,opt,name=flagDeps,proto3" json:"flagDeps,omitempty"`
	FlagDepsStatus      bool      `protobuf:"varint,3,opt,name=flagDepsStatus,proto3" json:"flagDepsStatus,omitempty"`
	FlagDependent       bool      `protobuf:"varint,4,opt,name=flagDependent,proto3" json:"flagDependent,omitempty"`
	FlagDependentStatus bool      `protobuf:"varint,5,opt,name=flagDependentStatus,proto3" json:"flagDependentStatus,omitempty"`
}

func (x *PluginMetaRequest) Reset() {
	*x = PluginMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginMetaRequest) ProtoMessage() {}

func (x *PluginMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginMetaRequest.ProtoReflect.Descriptor instead.
func (*PluginMetaRequest) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{13}
}

func (x *PluginMetaRequest) GetId() *PluginID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *PluginMetaRequest) GetFlagDeps() bool {
	if x != nil {
		return x.FlagDeps
	}
	return false
}

func (x *PluginMetaRequest) GetFlagDepsStatus() bool {
	if x != nil {
		return x.FlagDepsStatus
	}
	return false
}

func (x *PluginMetaRequest) GetFlagDependent() bool {
	if x != nil {
		return x.FlagDependent
	}
	return false
}

func (x *PluginMetaRequest) GetFlagDependentStatus() bool {
	if x != nil {
		return x.FlagDependentStatus
	}
	return false
}

type PluginMetaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PluginListWithoutStatus `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PluginMetaReply) Reset() {
	*x = PluginMetaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginMetaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginMetaReply) ProtoMessage() {}

func (x *PluginMetaReply) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginMetaReply.ProtoReflect.Descriptor instead.
func (*PluginMetaReply) Descriptor() ([]byte, []int) {
	return file_plugin_proto_rawDescGZIP(), []int{14}
}

func (x *PluginMetaReply) GetData() []*PluginListWithoutStatus {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_plugin_proto protoreflect.FileDescriptor

var file_plugin_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x56, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x67,
	0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x22, 0x4a, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x44,
	0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6c, 0x61, 0x67, 0x44,
	0x65, 0x70, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x56,
	0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6c,
	0x61, 0x67, 0x56, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x61,
	0x67, 0x44, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6c, 0x61,
	0x67, 0x44, 0x65, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x22,
	0x3e, 0x0a, 0x16, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xe1, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x66, 0x6c, 0x61, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x22, 0xe6, 0x04, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x35,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6c, 0x61, 0x67,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6c, 0x61,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66,
	0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x6c, 0x61, 0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x67, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67,
	0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x66, 0x6c, 0x61, 0x67, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x9b, 0x03, 0x0a,
	0x17, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x72, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x77, 0x0a, 0x0f, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33,
	0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x22, 0x30, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x49, 0x0a, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c,
	0x22, 0x48, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x22, 0x73, 0x0a, 0x16, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x66, 0x6c, 0x61, 0x67, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6c, 0x61,
	0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x22,
	0x31, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61,
	0x74, 0x68, 0x22, 0xd0, 0x01, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6c, 0x61,
	0x67, 0x44, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x6c, 0x61,
	0x67, 0x44, 0x65, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66,
	0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0b, 0x5a, 0x09,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_plugin_proto_rawDescOnce sync.Once
	file_plugin_proto_rawDescData = file_plugin_proto_rawDesc
)

func file_plugin_proto_rawDescGZIP() []byte {
	file_plugin_proto_rawDescOnce.Do(func() {
		file_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_proto_rawDescData)
	})
	return file_plugin_proto_rawDescData
}

var file_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_plugin_proto_goTypes = []interface{}{
	(*PluginGetRequest)(nil),        // 0: proto.PluginGetRequest
	(*PluginPullRequest)(nil),       // 1: proto.PluginPullRequest
	(*PluginInstallRequest)(nil),    // 2: proto.PluginInstallRequest
	(*PluginInterfaceRequest)(nil),  // 3: proto.PluginInterfaceRequest
	(*PluginListRequest)(nil),       // 4: proto.PluginListRequest
	(*PluginListWithStatus)(nil),    // 5: proto.PluginListWithStatus
	(*PluginListWithoutStatus)(nil), // 6: proto.PluginListWithoutStatus
	(*PluginListReply)(nil),         // 7: proto.PluginListReply
	(*PluginRemoveRequest)(nil),     // 8: proto.PluginRemoveRequest
	(*PluginStartRequest)(nil),      // 9: proto.PluginStartRequest
	(*PluginStopRequest)(nil),       // 10: proto.PluginStopRequest
	(*PluginUninstallRequest)(nil),  // 11: proto.PluginUninstallRequest
	(*PluginUploadRequest)(nil),     // 12: proto.PluginUploadRequest
	(*PluginMetaRequest)(nil),       // 13: proto.PluginMetaRequest
	(*PluginMetaReply)(nil),         // 14: proto.PluginMetaReply
	(*ID)(nil),                      // 15: proto.ID
	(*Author)(nil),                  // 16: proto.Author
	(*Dependency)(nil),              // 17: proto.Dependency
	(*Description)(nil),             // 18: proto.Description
	(*Core)(nil),                    // 19: proto.Core
	(*License)(nil),                 // 20: proto.License
	(*Link)(nil),                    // 21: proto.Link
	(*Repository)(nil),              // 22: proto.Repository
	(*ErrorReply)(nil),              // 23: proto.ErrorReply
	(*PluginID)(nil),                // 24: proto.PluginID
}
var file_plugin_proto_depIdxs = []int32{
	15, // 0: proto.PluginGetRequest.id:type_name -> proto.ID
	15, // 1: proto.PluginPullRequest.id:type_name -> proto.ID
	15, // 2: proto.PluginInstallRequest.id:type_name -> proto.ID
	15, // 3: proto.PluginListWithStatus.id:type_name -> proto.ID
	16, // 4: proto.PluginListWithStatus.author:type_name -> proto.Author
	17, // 5: proto.PluginListWithStatus.dependencies:type_name -> proto.Dependency
	18, // 6: proto.PluginListWithStatus.description:type_name -> proto.Description
	19, // 7: proto.PluginListWithStatus.core:type_name -> proto.Core
	20, // 8: proto.PluginListWithStatus.license:type_name -> proto.License
	21, // 9: proto.PluginListWithStatus.links:type_name -> proto.Link
	22, // 10: proto.PluginListWithStatus.repository:type_name -> proto.Repository
	15, // 11: proto.PluginListWithoutStatus.id:type_name -> proto.ID
	16, // 12: proto.PluginListWithoutStatus.author:type_name -> proto.Author
	17, // 13: proto.PluginListWithoutStatus.dependencies:type_name -> proto.Dependency
	18, // 14: proto.PluginListWithoutStatus.description:type_name -> proto.Description
	19, // 15: proto.PluginListWithoutStatus.core:type_name -> proto.Core
	20, // 16: proto.PluginListWithoutStatus.license:type_name -> proto.License
	21, // 17: proto.PluginListWithoutStatus.links:type_name -> proto.Link
	22, // 18: proto.PluginListWithoutStatus.repository:type_name -> proto.Repository
	5,  // 19: proto.PluginListReply.data:type_name -> proto.PluginListWithStatus
	23, // 20: proto.PluginListReply.errorPlugin:type_name -> proto.ErrorReply
	15, // 21: proto.PluginRemoveRequest.id:type_name -> proto.ID
	15, // 22: proto.PluginStartRequest.id:type_name -> proto.ID
	15, // 23: proto.PluginStopRequest.id:type_name -> proto.ID
	15, // 24: proto.PluginUninstallRequest.id:type_name -> proto.ID
	24, // 25: proto.PluginMetaRequest.id:type_name -> proto.PluginID
	6,  // 26: proto.PluginMetaReply.data:type_name -> proto.PluginListWithoutStatus
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_plugin_proto_init() }
func file_plugin_proto_init() {
	if File_plugin_proto != nil {
		return
	}
	file_common_proto_init()
	file_plugin_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginPullRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginListWithStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginListWithoutStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginUninstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginMetaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_plugin_proto_goTypes,
		DependencyIndexes: file_plugin_proto_depIdxs,
		MessageInfos:      file_plugin_proto_msgTypes,
	}.Build()
	File_plugin_proto = out.File
	file_plugin_proto_rawDesc = nil
	file_plugin_proto_goTypes = nil
	file_plugin_proto_depIdxs = nil
}
