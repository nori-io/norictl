// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commands.proto

package commands

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{0}
}
func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (dst *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(dst, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type ErrorReply struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorReply) Reset()         { *m = ErrorReply{} }
func (m *ErrorReply) String() string { return proto.CompactTextString(m) }
func (*ErrorReply) ProtoMessage()    {}
func (*ErrorReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{1}
}
func (m *ErrorReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorReply.Unmarshal(m, b)
}
func (m *ErrorReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorReply.Marshal(b, m, deterministic)
}
func (dst *ErrorReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorReply.Merge(dst, src)
}
func (m *ErrorReply) XXX_Size() int {
	return xxx_messageInfo_ErrorReply.Size(m)
}
func (m *ErrorReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorReply.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorReply proto.InternalMessageInfo

func (m *ErrorReply) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *ErrorReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type ListReply struct {
	Data                 []*List     `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Error                *ErrorReply `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListReply) Reset()         { *m = ListReply{} }
func (m *ListReply) String() string { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()    {}
func (*ListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{2}
}
func (m *ListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReply.Unmarshal(m, b)
}
func (m *ListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReply.Marshal(b, m, deterministic)
}
func (dst *ListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReply.Merge(dst, src)
}
func (m *ListReply) XXX_Size() int {
	return xxx_messageInfo_ListReply.Size(m)
}
func (m *ListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListReply proto.InternalMessageInfo

func (m *ListReply) GetData() []*List {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListReply) GetError() *ErrorReply {
	if m != nil {
		return m.Error
	}
	return nil
}

type List struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *List) Reset()         { *m = List{} }
func (m *List) String() string { return proto.CompactTextString(m) }
func (*List) ProtoMessage()    {}
func (*List) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{3}
}
func (m *List) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_List.Unmarshal(m, b)
}
func (m *List) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_List.Marshal(b, m, deterministic)
}
func (dst *List) XXX_Merge(src proto.Message) {
	xxx_messageInfo_List.Merge(dst, src)
}
func (m *List) XXX_Size() int {
	return xxx_messageInfo_List.Size(m)
}
func (m *List) XXX_DiscardUnknown() {
	xxx_messageInfo_List.DiscardUnknown(m)
}

var xxx_messageInfo_List proto.InternalMessageInfo

func (m *List) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *List) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *List) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type GetRequest struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	InstallDependencies  bool     `protobuf:"varint,2,opt,name=install_dependencies,json=installDependencies,proto3" json:"install_dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{4}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *GetRequest) GetInstallDependencies() bool {
	if m != nil {
		return m.InstallDependencies
	}
	return false
}

type RemoveRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{5}
}
func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(dst, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *RemoveRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EnableRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnableRequest) Reset()         { *m = EnableRequest{} }
func (m *EnableRequest) String() string { return proto.CompactTextString(m) }
func (*EnableRequest) ProtoMessage()    {}
func (*EnableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{6}
}
func (m *EnableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableRequest.Unmarshal(m, b)
}
func (m *EnableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableRequest.Marshal(b, m, deterministic)
}
func (dst *EnableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableRequest.Merge(dst, src)
}
func (m *EnableRequest) XXX_Size() int {
	return xxx_messageInfo_EnableRequest.Size(m)
}
func (m *EnableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EnableRequest proto.InternalMessageInfo

func (m *EnableRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *EnableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DisableRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisableRequest) Reset()         { *m = DisableRequest{} }
func (m *DisableRequest) String() string { return proto.CompactTextString(m) }
func (*DisableRequest) ProtoMessage()    {}
func (*DisableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{7}
}
func (m *DisableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisableRequest.Unmarshal(m, b)
}
func (m *DisableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisableRequest.Marshal(b, m, deterministic)
}
func (dst *DisableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisableRequest.Merge(dst, src)
}
func (m *DisableRequest) XXX_Size() int {
	return xxx_messageInfo_DisableRequest.Size(m)
}
func (m *DisableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisableRequest proto.InternalMessageInfo

func (m *DisableRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DisableRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UploadRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	So                   []byte   `protobuf:"bytes,2,opt,name=so,proto3" json:"so,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{8}
}
func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (dst *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(dst, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadRequest) GetSo() []byte {
	if m != nil {
		return m.So
	}
	return nil
}

// []bs = {len_hmac(1 byte), hmac..., body_file...}
type UploadCertsRequest struct {
	Pem                  []byte   `protobuf:"bytes,1,opt,name=pem,proto3" json:"pem,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadCertsRequest) Reset()         { *m = UploadCertsRequest{} }
func (m *UploadCertsRequest) String() string { return proto.CompactTextString(m) }
func (*UploadCertsRequest) ProtoMessage()    {}
func (*UploadCertsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_commands_199d8f9f9d1ba9c3, []int{9}
}
func (m *UploadCertsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadCertsRequest.Unmarshal(m, b)
}
func (m *UploadCertsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadCertsRequest.Marshal(b, m, deterministic)
}
func (dst *UploadCertsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadCertsRequest.Merge(dst, src)
}
func (m *UploadCertsRequest) XXX_Size() int {
	return xxx_messageInfo_UploadCertsRequest.Size(m)
}
func (m *UploadCertsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadCertsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadCertsRequest proto.InternalMessageInfo

func (m *UploadCertsRequest) GetPem() []byte {
	if m != nil {
		return m.Pem
	}
	return nil
}

func (m *UploadCertsRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func init() {
	proto.RegisterType((*ListRequest)(nil), "commands.ListRequest")
	proto.RegisterType((*ErrorReply)(nil), "commands.ErrorReply")
	proto.RegisterType((*ListReply)(nil), "commands.ListReply")
	proto.RegisterType((*List)(nil), "commands.List")
	proto.RegisterType((*GetRequest)(nil), "commands.GetRequest")
	proto.RegisterType((*RemoveRequest)(nil), "commands.RemoveRequest")
	proto.RegisterType((*EnableRequest)(nil), "commands.EnableRequest")
	proto.RegisterType((*DisableRequest)(nil), "commands.DisableRequest")
	proto.RegisterType((*UploadRequest)(nil), "commands.UploadRequest")
	proto.RegisterType((*UploadCertsRequest)(nil), "commands.UploadCertsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandsClient is the client API for Commands service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandsClient interface {
	ListCommand(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	GetCommand(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ErrorReply, error)
	RemoveCommand(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*ErrorReply, error)
	EnableCommand(ctx context.Context, in *EnableRequest, opts ...grpc.CallOption) (*ErrorReply, error)
	DisableCommand(ctx context.Context, in *DisableRequest, opts ...grpc.CallOption) (*ErrorReply, error)
	UploadCommand(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*ErrorReply, error)
	UploadCertsCommand(ctx context.Context, in *UploadCertsRequest, opts ...grpc.CallOption) (*ErrorReply, error)
}

type commandsClient struct {
	cc *grpc.ClientConn
}

func NewCommandsClient(cc *grpc.ClientConn) CommandsClient {
	return &commandsClient{cc}
}

func (c *commandsClient) ListCommand(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/ListCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) GetCommand(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/GetCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) RemoveCommand(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/RemoveCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) EnableCommand(ctx context.Context, in *EnableRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/EnableCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) DisableCommand(ctx context.Context, in *DisableRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/DisableCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) UploadCommand(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/UploadCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandsClient) UploadCertsCommand(ctx context.Context, in *UploadCertsRequest, opts ...grpc.CallOption) (*ErrorReply, error) {
	out := new(ErrorReply)
	err := c.cc.Invoke(ctx, "/commands.Commands/UploadCertsCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandsServer is the server API for Commands service.
type CommandsServer interface {
	ListCommand(context.Context, *ListRequest) (*ListReply, error)
	GetCommand(context.Context, *GetRequest) (*ErrorReply, error)
	RemoveCommand(context.Context, *RemoveRequest) (*ErrorReply, error)
	EnableCommand(context.Context, *EnableRequest) (*ErrorReply, error)
	DisableCommand(context.Context, *DisableRequest) (*ErrorReply, error)
	UploadCommand(context.Context, *UploadRequest) (*ErrorReply, error)
	UploadCertsCommand(context.Context, *UploadCertsRequest) (*ErrorReply, error)
}

func RegisterCommandsServer(s *grpc.Server, srv CommandsServer) {
	s.RegisterService(&_Commands_serviceDesc, srv)
}

func _Commands_ListCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).ListCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/ListCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).ListCommand(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_GetCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).GetCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/GetCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).GetCommand(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_RemoveCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).RemoveCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/RemoveCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).RemoveCommand(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_EnableCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).EnableCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/EnableCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).EnableCommand(ctx, req.(*EnableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_DisableCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).DisableCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/DisableCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).DisableCommand(ctx, req.(*DisableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_UploadCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).UploadCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/UploadCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).UploadCommand(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commands_UploadCertsCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadCertsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).UploadCertsCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commands.Commands/UploadCertsCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).UploadCertsCommand(ctx, req.(*UploadCertsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Commands_serviceDesc = grpc.ServiceDesc{
	ServiceName: "commands.Commands",
	HandlerType: (*CommandsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListCommand",
			Handler:    _Commands_ListCommand_Handler,
		},
		{
			MethodName: "GetCommand",
			Handler:    _Commands_GetCommand_Handler,
		},
		{
			MethodName: "RemoveCommand",
			Handler:    _Commands_RemoveCommand_Handler,
		},
		{
			MethodName: "EnableCommand",
			Handler:    _Commands_EnableCommand_Handler,
		},
		{
			MethodName: "DisableCommand",
			Handler:    _Commands_DisableCommand_Handler,
		},
		{
			MethodName: "UploadCommand",
			Handler:    _Commands_UploadCommand_Handler,
		},
		{
			MethodName: "UploadCertsCommand",
			Handler:    _Commands_UploadCertsCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commands.proto",
}

func init() { proto.RegisterFile("commands.proto", fileDescriptor_commands_199d8f9f9d1ba9c3) }

var fileDescriptor_commands_199d8f9f9d1ba9c3 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x8b, 0xd3, 0x40,
	0x14, 0xc6, 0x37, 0x4d, 0x5d, 0x92, 0xd7, 0x6d, 0x90, 0xd9, 0xaa, 0x61, 0xd9, 0x43, 0x99, 0x53,
	0xf1, 0xb0, 0x60, 0x7b, 0x91, 0x7a, 0x51, 0xdb, 0x22, 0x88, 0x07, 0x1d, 0xf0, 0xe4, 0x41, 0xa6,
	0xcd, 0x03, 0x83, 0x49, 0x26, 0x66, 0x26, 0x42, 0xff, 0x54, 0xff, 0x1b, 0x99, 0xc9, 0x8c, 0x49,
	0x6a, 0x5b, 0x58, 0x7a, 0x9b, 0xf7, 0xe6, 0x7d, 0x3f, 0xbe, 0xcc, 0xf7, 0x08, 0x44, 0x3b, 0x91,
	0xe7, 0xbc, 0x48, 0xe4, 0x43, 0x59, 0x09, 0x25, 0x48, 0xe0, 0x6a, 0x3a, 0x86, 0xd1, 0xa7, 0x54,
	0x2a, 0x86, 0xbf, 0x6a, 0x94, 0x8a, 0x2e, 0x01, 0x36, 0x55, 0x25, 0x2a, 0x86, 0x65, 0xb6, 0x27,
	0xcf, 0xe1, 0x5a, 0x2a, 0xae, 0x6a, 0x19, 0x7b, 0x53, 0x6f, 0x16, 0x30, 0x5b, 0x91, 0x09, 0x3c,
	0x41, 0x3d, 0x15, 0x0f, 0xa6, 0xde, 0x2c, 0x64, 0x4d, 0x41, 0xbf, 0x41, 0xd8, 0xa0, 0xb4, 0x94,
	0xc2, 0x30, 0xe1, 0x8a, 0xc7, 0xde, 0xd4, 0x9f, 0x8d, 0xe6, 0xd1, 0xc3, 0x3f, 0x03, 0x66, 0xc4,
	0xdc, 0x91, 0x97, 0x5d, 0xcc, 0x68, 0x3e, 0x69, 0x87, 0x5a, 0x0f, 0x0e, 0xfe, 0x19, 0x86, 0x5a,
	0x49, 0xee, 0x21, 0x2c, 0x78, 0x8e, 0xb2, 0xe4, 0x3b, 0x34, 0xae, 0x42, 0xd6, 0x36, 0x08, 0x81,
	0xa1, 0x2e, 0xac, 0x2f, 0x73, 0xd6, 0x1f, 0xc1, 0x6b, 0xf5, 0x43, 0x54, 0xb1, 0x6f, 0xba, 0xb6,
	0xa2, 0x5f, 0x00, 0x3e, 0xa0, 0xfb, 0x70, 0xf2, 0x14, 0xfc, 0xba, 0x4a, 0x2d, 0x51, 0x1f, 0xc9,
	0x2b, 0x98, 0xa4, 0x85, 0x54, 0x3c, 0xcb, 0xbe, 0x27, 0x58, 0x62, 0x91, 0x60, 0xb1, 0x4b, 0x51,
	0x1a, 0x76, 0xc0, 0x6e, 0xed, 0xdd, 0xba, 0x73, 0x45, 0xdf, 0xc1, 0x98, 0x61, 0x2e, 0x7e, 0xa3,
	0xa3, 0x3e, 0xda, 0xad, 0x46, 0x6c, 0x0a, 0xbe, 0xcd, 0x2e, 0x40, 0xbc, 0x87, 0x68, 0x9d, 0xca,
	0xcb, 0x18, 0x0b, 0x18, 0x7f, 0x2d, 0x33, 0xc1, 0x13, 0x87, 0x70, 0x43, 0x5e, 0xe7, 0x65, 0x23,
	0x18, 0x48, 0x61, 0x64, 0x37, 0x6c, 0x20, 0x05, 0x7d, 0x0d, 0xa4, 0x11, 0xad, 0xb0, 0x52, 0xb2,
	0xf3, 0xb2, 0x25, 0xe6, 0x46, 0x78, 0xc3, 0xf4, 0x51, 0x77, 0x7e, 0xe2, 0xde, 0x0a, 0xf5, 0x71,
	0xfe, 0xc7, 0x87, 0x60, 0x65, 0xc3, 0x27, 0x6f, 0x9a, 0x95, 0xb4, 0x35, 0x79, 0x76, 0xb0, 0x3b,
	0x0d, 0xf6, 0xee, 0xf6, 0xb0, 0x5d, 0x66, 0x7b, 0x7a, 0x45, 0x96, 0x26, 0x55, 0xa7, 0xed, 0xac,
	0x54, 0x9b, 0xf5, 0xdd, 0xd1, 0x45, 0xa3, 0x57, 0xe4, 0xad, 0x8b, 0xcf, 0xc9, 0x5f, 0xb4, 0x83,
	0xbd, 0x5c, 0xcf, 0x11, 0x9a, 0xf4, 0x8e, 0x10, 0x7a, 0xb1, 0x9e, 0x24, 0xb4, 0xe1, 0x39, 0x44,
	0xdc, 0x4e, 0xf6, 0x63, 0x3d, 0xe7, 0xc2, 0xe6, 0xf0, 0xbf, 0x8b, 0x5e, 0xaa, 0x27, 0x09, 0x1f,
	0x7b, 0x49, 0x3a, 0xcc, 0xfd, 0x21, 0xa6, 0x9b, 0xf3, 0x29, 0xd6, 0xf6, 0xda, 0xfc, 0x72, 0x16,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x5f, 0xc6, 0x29, 0x84, 0x04, 0x00, 0x00,
}
